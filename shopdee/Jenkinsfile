pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'pisol00/shopdee:latest'
        DOCKER_CREDENTIALS = credentials('dockerhub')
    }

    stages {
        stage('Start Jenkins') {
            steps {
                sh 'echo Start Jenkins for Django............'
                sh 'echo docker : user = $DOCKER_CREDENTIALS_USR : password = $DOCKER_CREDENTIALS_PSW'
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('./shopdee') {  // เปลี่ยน path ตามโครงสร้างโปรเจกต์
                    sh 'echo "Running in $(pwd)"'
                    sh 'echo start build the Docker image = $DOCKER_IMAGE'
                    sh 'docker build -t $DOCKER_IMAGE .'
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    sh 'echo $DOCKER_CREDENTIALS_PSW | docker login --username $DOCKER_CREDENTIALS_USR --password-stdin'
                    sh 'docker push $DOCKER_IMAGE'
                }
            }
        }

        stage('Clear Docker Components') {
            steps {
                script {
                    sh 'docker stop $(docker ps -a -q) || true'  
                    sh 'docker rm $(docker ps -a -q) || true' 
                    sh 'docker rmi $(docker images -q) || true'
                    sh 'docker system prune -af'
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    sh 'docker pull $DOCKER_IMAGE'
                    // รัน Docker container
                    sh 'docker run -d --name shopdee -p 8000:8000 $DOCKER_IMAGE'
                    // รัน migrations
                    sh 'docker exec shopdee python manage.py migrate' 
                    // รันเซิร์ฟเวอร์ Django
                    sh 'docker exec -d shopdee python manage.py runserver 0.0.0.0:8000'
                }
            }
        }
    }

    post {
        always {
            sh 'docker logout'
        }
    }
}
