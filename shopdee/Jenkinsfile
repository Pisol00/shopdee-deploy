pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'pisol00/shopdee:latest'
        DOCKER_CREDENTIALS = credentials('dockerhub')
    }

    stages {
        stage('Start Jenkins') {
            steps {
                echo 'Starting Jenkins for Django...'
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('./shopdee') {
                    script {
                        echo "Running in ${pwd()}"
                        echo "Starting to build the Docker image: ${DOCKER_IMAGE}"
                        sh "docker build -t ${DOCKER_IMAGE} ."
                    }
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_CREDENTIALS_USR', passwordVariable: 'DOCKER_CREDENTIALS_PSW')]) {
                        sh 'echo $DOCKER_CREDENTIALS_PSW | docker login --username $DOCKER_CREDENTIALS_USR --password-stdin'
                        sh "docker push ${DOCKER_IMAGE}"
                    }
                }
            }
        }

        stage('Clear Docker Components') {
            steps {
                script {
                    sh 'docker stop shopdee || true'
                    sh 'docker rm shopdee || true' 
                    sh 'docker rmi $(docker images -q) || true'
                    sh 'docker system prune -af'
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    sh "docker pull ${DOCKER_IMAGE}"
                    sh "docker run -d --name shopdee -p 8000:8000 ${DOCKER_IMAGE}"
                    sh "docker exec shopdee python manage.py migrate" 
                    sh "docker exec -d shopdee gunicorn shopdee.wsgi:application --bind 0.0.0.0:8000"
                }
            }
        }
    }

    post {
        always {
            script {
                sh 'docker logout || true'
            }
        }
    }
}
